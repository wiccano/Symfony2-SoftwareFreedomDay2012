jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        Admin\UsuariosBundle\Entity\Usuario: 
          algorithm: sha512
          encode-as-base64: true
          iterations: 10
          
    providers:
        main:
          entity: { class: Admin\UsuariosBundle\Entity\Usuario, property: usuario_login }
    
    #providers:
        #in_memory:
            #memory:
                #users:
                    #wiccano:  { password: temporal, roles: 'ROLE_ADMIN' }

    
    acl:
        connection: default
                      
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/
            anonymous:    ~
            form_login:
                # the user is redirected here when he/she needs to login
                login_path: /login
                # if true, forward the user to the login form instead of redirecting
                use_forward: false
                # submit the login form here
                check_path: /login_check
                # by default, the login form *must* be a POST, not a GET
                post_only: true
                # login success redirecting options (read further below)
                always_use_default_target_path: true
                default_target_path: /admin/inicio
                target_path_parameter: _target_path
                use_referer: false
                # login failure redirecting options (read further below)
                failure_path: null
                failure_forward: false
                # field names for the username and password fields
                username_parameter: formLogin[_username]
                password_parameter: formLogin[_password]
                # csrf token options
                csrf_parameter: _csrf_token
                intention: authenticate
                # success_handler:  success_handler.login
            logout:
                path:   /logout
                target: /
            access_denied_url: /denegado
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
         - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: /admin/*, role: IS_AUTHENTICATED_FULLY }
         - { path: /*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/_internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
